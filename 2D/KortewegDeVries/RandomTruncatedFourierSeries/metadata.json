{
    "pde": "KortewegDeVries",
  
    "generate_dataset_py": {
      "num_spatial_dims": 2,
      "num_points": 100,
      "num_channels": 1,
      "x_domain_extent": 100.0,
      "y_domain_extent": 100.0,
      "dt_solver": 0.0001,
      "t_end": 500.0,
      "save_freq": 1,
      "simulations": 50,
      "plotted_sim": 2,
      "ic": "RandomTruncatedFourierSeries",
      "bc": "None",
      "include_init": true
    },
  
    "generation_details": {
      "library": "Exponax",
      "library_url": "https://github.com/Ceyron/exponax/tree/main/exponax",
      "spatial_method": "Fourier pseudo-spectral method",
      "dealiasing": "2/3-rule",
      "time_integration": "Exponential time-differencing",
      "variant": "ETDRK2 (second-order Runge-Kutta)"
    },

    "stepper_py": {
      "cutoff": 5
    },
  
    "exponax_stepper": {
      "diffusivity": 0.1,
      "convection_scale": 1.0,
      "single_channel": false,
      "conservative": false,
      "order": 2,
      "dealiasing_fraction": 0.6666666666666666,
      "num_circle_points": 16,
      "circle_radius": 1.0
    },
  
    "exponax_ic": {
      "description": "This dataset uses the RandomTruncatedFourierSeries class to generate initial conditions.",
      "amplitude_range": [0.0, 1.0],
      "angle_range": [0.0, 6.283185307179586],
      "offset_range": [0.0, 0.0],
      "std_one": true,
      "max_one": false,
      "method": "Initial condition generated by sampling complex Fourier coefficients with random amplitude and phase, truncated using a low-pass filter. A small real offset is added to the zero mode. The result is transformed back to physical space using an inverse FFT. Optional normalization can enforce unit standard deviation or unit maximum.",
      "source_module": "exponax.ic.RandomTruncatedFourierSeries"
    },
  
    "dataset_global_statistics": {
      "mean": -0.000429,
      "std": 1.815735,
      "min": -7.707728,
      "max": 8.314766
    }
    
  }
